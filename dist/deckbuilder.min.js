for(var skillID in SKILL_DATA){var skillInfo=SKILL_DATA[skillID];"flurry"===skillID?skillInfo.type="flurry":0<=["turnStart","onAttack","onDamaged","turnEnd"].indexOf(skillInfo.type)&&(skillInfo.type="passive")}var REVERSE_FUSIONS={};for(var id in FUSIONS){var fusion=FUSIONS[id];REVERSE_FUSIONS[fusion]=id}delete BATTLEGROUNDS[104];var inventory,base64=require("base64"),cardApi=require("cardApi"),runeApi=require("runeApi"),cardInfo=require("cardInfo"),factions=require("factions"),unitInfoHelper=require("unitInfoHelper"),urlHelper=require("urlHelper"),cardUI=require("cardUI"),storageAPI=require("storageAPI"),dataUpdater=require("dataUpdater"),loadCardCache=require("loadCardCache"),simTutorial=require("simTutorial"),delayTutorial=!0,fromInventory=!1,deck=[];deck.commander=unitInfoHelper.defaultCommander;var advancedFilters,optionsDialog,saveDeckDialog,loadDeckDialog,detailsDialog,$nameFilter,$deck,$cardSpace,inventoryMode=!(deck.deck=[]),attackHidden={},attackRanges=[],healthHidden={},healthRanges=[],delayHidden={},delayRanges=[],delayExclusions=[],skillFilters=[],skillExclusions=[],skillHidden={},skillFiltersAdv=[],skillHiddenAdv={},factionHidden={},subfactionHidden={},dualFactionHidden={},rarityFilters=[],rarityHidden={},typeFilters=[],typeHidden={},setFilters=[],setExclusions=[],setHidden={},fusionFilters=[],fusionHidden={},nameHidden={},allCards=CARDS,showUpgrades=!1,units=[],unitsShown=[],unitsFiltered=[];function makeUnitKey(unit){var unitKey=unit.id+"_"+unit.level;return unit.runes&&unit.runes.length&&(unitKey+="_"+unit.runes[0].id),unitKey}function updateGameData(){setTimeout(dataUpdater.updateData,1,loadCards,!0)}function loadCards(){allCards=CARDS,$("#loadingSplash").html("Loading..."),drawAllCards(),$("body").removeClass("loading"),simTutorial.checkTutorial()}function setupPopups(){stopPropagation("advancedFilters"),stopPropagation("unitOptions"),$(".accordion").accordion({collapsible:!0,heightStyle:"content"}),$(".start-closed").accordion("option","active",!1).show(),urlHelper.paramDefined("spoilers")&&$("#deck-container, #filter-container").accordion("option","active",!1).show(),advancedFilters=$("#advancedFilters").dialog({autoOpen:!1,width:150,minHeight:20,modal:!0,resizable:!1,buttons:{OK:function(){filterAdvanced(advancedFilters.skill),advancedFilters.dialog("close")},Cancel:function(){advancedFilters.dialog("close")}},open:closeDialogOnOverlayClick}),optionsDialog=$("#unitOptions").dialog({autoOpen:!1,width:250,minHeight:20,modal:!0,resizable:!1,buttons:{OK:function(){disableTracking=!1,modifyCard(optionsDialog),updateHash(),optionsDialog.dialog("close"),disableTracking=!1},Cancel:function(){resetCard(optionsDialog),optionsDialog.dialog("close"),disableTracking=!1}},open:closeDialogOnOverlayClick}).bind("change",function(){modifyCard(optionsDialog)});for(var imageButtons=$('input[type="image"]:not(.skill-filter)'),i=0;i<imageButtons.length;i++){var imageButton=imageButtons[i],toolTip='<div class="tooltip">'+imageButton.getAttribute("title")+"</div>";imageButton.removeAttribute("title");var new_html='<div style="display:inline; position:relative; overflow:visible;">'+imageButton.outerHTML+toolTip+"</div>";imageButton.outerHTML=new_html}saveDeckDialog=$("#saveDeckDialog").dialog({autoOpen:!1,modal:!0,resizable:!1,buttons:{Save:function(){var name=$("#saveDeckName").val(),hash=$("#hash").val();storageAPI.saveDeck(name,hash),saveDeckDialog.dialog("close")},Cancel:function(){saveDeckDialog.dialog("close")}},open:closeDialogOnOverlayClick}),loadDeckDialog=$("#loadDeckDialog").dialog({autoOpen:!1,minWidth:320,modal:!0,resizable:!1,buttons:{Delete:function(){var name=$("#loadDeckName").val();storageAPI.deleteDeck(name)},Load:function(){var name=$("#loadDeckName").val(),newHash=storageAPI.loadDeck(name);loadDeckDialog.onloaded(newHash),loadDeckDialog.dialog("close")},Cancel:function(){loadDeckDialog.dialog("close")}},open:closeDialogOnOverlayClick}),detailsDialog=$("#detailedView").dialog({minWidth:480,minHeight:330,padding:0,autoOpen:!1,modal:!0,resizable:!1,open:closeDialogOnOverlayClick,close:function(){cardDetailScope.visible=!1}})}function closeDialogOnOverlayClick(){var targetDialog=$(this);jQuery(".ui-widget-overlay").bind("click contextmenu",function(event){targetDialog.dialog("close"),event.preventDefault()})}function drawAllCards(){drawCardList(),drawDeck()}function drawDeck(){var hash=urlHelper.paramValue("hash")||$("#hash").val();hash&&hash_changed(hash);var name=urlHelper.paramValue("name");name&&setDeckName(name),doDrawDeck()}function doDrawDeck(){$deck=cardUI.displayDeck(deck,inventoryMode),updateHash()}function addDeckEventHandlers($deck){addCardEvent($deck,"mousedown",duplicate),addCardEvent($deck,"mouseover",highlight),addCardEvent($deck,"click",deckOnClick),addCardEvent($deck,"contextmenu",showCardOptions)}function addLibraryEventHandlers($cardSpace){addCardEvent($cardSpace,"click",addToDeck),addCardEvent($cardSpace,"contextmenu",showDetails)}function addCardEvent($collection,eventName,callback){callback&&$collection.on(eventName,function(event){var htmlCard=event.target.closest(".card");if(htmlCard&&!htmlCard.classList.contains("blank")){var i=$(htmlCard).attr("data-i");return callback(event,htmlCard,i)}})}function showDetails(event,htmlCard){event.preventDefault();var unit=getUnitFromCard(htmlCard);cardDetailScope.setUnit(unit).$apply(),cardDetailScope.visible=!0,detailsDialog.dialog("option","position",{my:"center",at:"center",of:window}),detailsDialog.dialog("open"),detailsDialog.onloaded=setInventory}function duplicate(event,htmlCard){if(event.ctrlKey){var $htmlCard=$(htmlCard);if(!inventoryMode){var emptySpaces=$htmlCard.parent().find(".blank");if(!emptySpaces.length)return;emptySpaces.first().remove()}var index=$htmlCard.index(),unit=deck.deck[index-1];$htmlCard.clone().insertBefore($htmlCard.parent().children()[index]),deck.deck.splice(index,0,unitInfoHelper.create(unit.id,unit.level,unit.runes||[])),updateHash()}}function deckOnClick(event,htmlCard){event.ctrlKey||removeFromDeck(htmlCard)}function drawCardList(){if(units=[],unitsShown=[],inventory){fromInventory=!0;var commander=(inventory=base64.decodeHash(inventory)).commander;inventory=inventory.deck,commander&&!unitInfoHelper.areEqual(commander,unitInfoHelper.defaultCommander)&&inventory.push(commander);for(var i=0;i<inventory.length;i++)addInventoryUnit(inventory[i]);deck.commander=removeFromInventory(deck.commander);for(i=0;i<deck.deck.length;i++){var unit=deck.deck[i];deck.deck[i]=removeFromInventory(unit)}}else if(urlHelper.paramDefined("spoilers"))for(var id in spoilers)addUnitLevels(id);else for(var id in allCards)id<1e4&&addUnit(id);sortCards(),applyFilters()}$(function(){urlHelper.paramDefined("fromSim")||($("#header").load("templates/header.html",function(){$("#header").show(),$("#help").click(simTutorial.showTutorial)}),$.holdReady(!0),$("#footer").load("templates/footer.html",function(){$("#footer").show(),$.holdReady(!1)})),setupPopups(),stopPropagation("hash"),$("body").addClass("loading"),addDeckEventHandlers($("#deck")),addLibraryEventHandlers($("#cardSpace")),$(window).resize(onResize),window.onwheel=changePage,window.oncontextmenu=hideContext,$("#rows").val(storageAPI.getField("deckBuilder","rows",3)),$("#rows").bind("change",function(){storageAPI.setField("deckBuilder","rows",$("#rows").val())}),$nameFilter=$("#nameFilter").keypress(function(event){13===event.which&&(1===unitsFiltered.length&&addUnitToDeck(unitsFiltered[0],$cardSpace.children()[0]),event.preventDefault())}).autocomplete({source:[]}),$("#deck").sortable({items:".card:not(.commander):not(.blank)",tolerance:"intersect",helper:function(event,ui){return ui.clone()},start:function(event,ui){var lastPos=ui.placeholder.index()-1;ui.item.data("last_pos",lastPos),$(ui.item).hide()},change:function(event,ui){var origPos=ui.item.index(),lastPos=ui.item.data("last_pos")-1,newPos=ui.placeholder.index();origPos<newPos&&newPos--,highlighted=newPos,ui.item.data("last_pos",newPos),newPos--;var array=deck.deck;array.splice(newPos,0,array.splice(lastPos,1)[0]),updateHash(),updateHighlights()}}),inventory=urlHelper.paramValue("inventory")||inventory,$("[name=rarity]").click(makeOnClickFilter(filterRarity)),$("input[name=faction]").click(makeOnClickFilter(filterFaction)),$("input[name=subfaction]").click(makeOnClickFilter(filterSubfaction)),$("[name=delay]").click(makeOnClickFilter(filterDelay)),$("[name=set]").click(makeOnClickFilter(filterSet)),$("#dualfaction").click(makeOnClickFilter(filterDualFaction)),$("input[name=CardType]").click(makeOnClickFilter(filterType)),$("input[name=fusion]").click(makeOnClickFilter(filterFusion)),urlHelper.paramDefined("spoilers")||urlHelper.paramDefined("latestCards")?($("#loadingSplash").html("Checking for New Cards..."),updateGameData()):(loadCardCache(),setTimeout(loadCards,1)),urlHelper.paramDefined("unlimited")&&($deck=$("#deck"),toggleInventoryMode()),$("#graph-accordion").click(updateGraphs),$("#hash").change(hash_changed.debounce(100)).on("paste",hash_changed),$("#resetDeck").click(resetDeck),$("#sortDeck").click(sortDeck),$("#saveDeck").click(saveDeck),$("#loadDeck").click(loadDeck),$("#updateGameData").click(updateGameData),$("#inventoryMode").click(toggleInventoryMode),$("#nameFilter").keyup(filterName),$("#clear-filters").click(clearFilters),$("#pageUp").click(pageUp),$("#pageDown").click(pageDown),$("#loadInventory").click(loadInventory),$("#toggleUpgrades").click(toggleUpgrades),$("#skillDetails").click(toggleSkillDetails),$("#sortField").change(sortAndDraw)});var page=0,pages=0;function doDrawCardList(cardList,resetPage){var detailedSkills=document.getElementById("skillDetails").checked,cardspace=document.getElementById("cardSpace");resetPage&&(page=0);var width=cardspace.offsetWidth,rows=document.getElementById("rows").value,cards=~~(width/90);cards*=rows;for(var lastUnit=null,unique=0,i=0,len=cardList.length;i<len;i++){var unit=cardList[i];unitInfoHelper.areEqual(unit,lastUnit)||unique++,lastUnit=unit}if(1<(pages=Math.max(Math.ceil(unique/cards),1))){var start=cards*page;pages<=page&&(start=cards*(page=pages-1)),cardUI.displayCardList(cardList,detailedSkills,start,start+cards)}else page=0,cardUI.displayCardList(cardList,detailedSkills);document.getElementById("pageNumber").innerHTML="Page "+(page+1)+"/"+pages;var $cards=($cardSpace=$("#cardSpace")).find(".card");if($cards.length){var card=$cards[0],$card=$(card),minHeight=(card.offsetHeight+parseInt($card.css("marginTop"))+parseInt($card.css("marginBottom")))*parseInt(rows);$cardSpace.css("min-height",minHeight+"px")}}var onResize=function(){applyFilters(!0)}.debounce(50);function changePage(event){overInventory(event)&&(event.deltaY<0?pageUp():0<event.deltaY&&pageDown(),event.preventDefault())}function overInventory(event){for(var element=event.srcElement;null!=element;){if("cardSpace"===element.id)return!0;element=element.parentElement}}function pageUp(){--page<0?page=0:applyFilters(!0)}function pageDown(){pages<=++page?page--:applyFilters(!0)}function redrawCardList(keepPaging){sortCards(),applyFilters(keepPaging)}function addInventoryUnit(unit){units.push(unit),unitsShown.push(unit)}function addUnit(id,spoilers){addUnitLevels(id),spoilers?(spoilers["1"+id]&&addUnitLevels("1"+id),spoilers["2"+id]&&addUnitLevels("2"+id)):999<id&&(addUnitLevels("1"+id),addUnitLevels("2"+id))}function addUnitLevels(id){var card=allCards[id];if(card)for(var level=1;level<=card.maxLevel;level++){var unit=unitInfoHelper.create(id,level);units.push(unit),(showUpgrades||level===card.maxLevel)&&unitsShown.push(unit)}}function resetDeck(){hash_changed("oZ0IB")}var disableTracking=!1;function hash_changed(hash){if(fromInventory&&(unitInfoHelper.areEqual(deck.commander,unitInfoHelper.defaultCommander)||unitsShown.push(deck.commander),unitsShown.push.apply(unitsShown,deck.deck),redrawCardList(!0)),void 0===hash&&(hash=document.getElementById("hash").value.trim()),setHash(hash),updateSimulator(hash),deck=base64.decodeHash(hash),hash||(deck.commander=null),fromInventory){unitInfoHelper.areEqual(deck.commander,unitInfoHelper.defaultCommander)||removeFromInventory(deck.commander);for(var i=0;i<deck.deck.length;i++)removeFromInventory(deck.deck[i]);applyFilters()}doDrawDeck(),generateLink()}function setHash(hash){$("#hash").val(hash),generateLink()}function sortDeck(){deck.deck.sort(function(unitA,unitB){var compare,cardA=cardApi.byId(unitA),cardB=cardApi.byId(unitB);return(compare=cardA.rarity-cardB.rarity)?compare:(compare=cardA.type-cardB.type)?compare:(compare=compareByID(unitA,unitB))?compare:(compare=unitA.level-unitB.level)?compare:compare=(unitA.runes.length?unitA.runes[0].id:0)-(unitB.runes.length?unitB.runes[0].id:0)}),doDrawDeck()}function addToDeck(event,htmlCard){addUnitToDeck(getUnitFromCard(htmlCard),htmlCard)}function addUnitToDeck(unit,htmlCard){var $htmlCard=$(htmlCard).clone().find(".multiplier").remove().end();inventoryMode||(unit=Object.assign({},unit));var $deck=$("#deck");if(cardInfo.isCommander(unit.id)){if(unitInfoHelper.areEqual(deck.commander,unit))return;deck.commander=unit,replaceCard($deck.find(".card").first(),$htmlCard)}else{if(!inventoryMode&&15===deck.deck.length)return;deck.deck.push(unit);var emptySpaces=$deck.find(".blank");emptySpaces.length?replaceCard(emptySpaces.first(),$htmlCard):$deck.append($htmlCard)}if($htmlCard=$(htmlCard),fromInventory){removeFromInventory(unit);var $mult=$htmlCard.find("div.multiplier");if(0<$mult.length){var count=Number($mult.attr("data-count"))-1;1<count?($mult.attr("data-count",count),$mult.html("x"+count)):$htmlCard.find(".multiplier").remove()}else $htmlCard.remove()}else $htmlCard.stop().hide().fadeIn(100);updateHash()}function replaceCard(oldCard,newCard){var speed=oldCard.hasClass("blank")?1e3:600;$(oldCard).replaceWith(newCard),newCard.children().stop().hide().fadeIn(speed).promise()}function removeFromInventory(unit){for(var i=0;i<unitsShown.length;i++){var unit_i=unitsShown[i];if(unitInfoHelper.areEqual(unit,unit_i))return unitsShown.splice(i,1)[0]}return unit}function removeFromDeck(htmlCard){var unit,$htmlCard=$(htmlCard),index=$htmlCard.index();if(0===index){if(unit=deck.commander,unitInfoHelper.areEqual(unit,unitInfoHelper.defaultCommander))return;deck.commander=unitInfoHelper.defaultCommander;var card=cardApi.byId(unitInfoHelper.defaultCommander);replaceCard($htmlCard,$(cardUI.cardToHtml(card)))}else unit=deck.deck.splice(index-1,1)[0],$htmlCard.remove(),deck.deck.length<15&&$deck.append("<div class='card blank'></div>");fromInventory&&(unitsShown.push(unit),redrawCardList(!0)),updateHash()}function highlight(event,htmlCard){highlighted=$(htmlCard).index(),updateHighlights()}var highlighted=-1;function updateHighlights(){var hash_highlighted=document.getElementById("hash"),deckHash=hash_highlighted.value,start=5*highlighted,end=start+5,highlightedHash=deckHash.substring(0,start)+"<span>"+deckHash.substring(start,end)+"</span>"+deckHash.substring(end),hash_highlighter=document.getElementById("hash_highlighter");hash_highlighter.innerHTML=highlightedHash,$(hash_highlighter).width($(hash_highlighted).width())}function updateHash(){var deckHash=base64.encodeHash(deck);setHash(deckHash),updateHighlights(),addChange(deckHash),updateSimulator(deckHash),updateGraphs()}function updateSimulator(){}function updateGraphs(){if(!$("#deckGraphs").is(":visible"))return null;for(var delays=[0,0,0,0,0],attackStats=[],healthStats=[],delayStats=[],types={},sub_types={},i=0;i<deck.deck.length;i++){var unit=deck.deck[i];delays[(card=cardApi.byId(unit)).cost]++,types[card.type]=(types[card.type]||0)+1,attackStats.push(Number(card.attack)),healthStats.push(Number(card.health)),delayStats.push(Number(card.cost)),(subFactions=card.sub_type).length||subFactions.push(0);for(var s=0;s<subFactions.length;s++){sub_types[subFaction=subFactions[s]]=(sub_types[subFaction]||0)+1}}function numericSort(a,b){return a-b}function sum(total,num){return total+num}function average(ary){return ary.length?(ary.reduce(sum)/ary.length).toFixed(0):0}attackStats.sort(numericSort),healthStats.sort(numericSort),delayStats.sort(numericSort);var avgAttack=average(attackStats),avgHealth=average(healthStats),avgDelay=average(delayStats),options={width:300,height:200,axisY:{onlyInteger:!0},plugins:[Chartist.plugins.legend(),Chartist.plugins.tooltip()],series:{Attack:{lineSmooth:Chartist.Interpolation.simple()},Health:{lineSmooth:Chartist.Interpolation.simple()},Delay:{lineSmooth:Chartist.Interpolation.simple()}}};new Chartist.Line("#statChart",{series:[{name:"Attack",className:"ct-series-attack",data:attackStats},{name:"Health",className:"ct-series-health",data:healthStats},{name:"Delay",className:"ct-series-delay",data:delayStats}]},options);options={width:300,height:200,axisY:{onlyInteger:!0},distributeSeries:!0};var data={labels:["0","1","2","3","4"],series:delays};new Chartist.Bar("#delayChart",data,options);data={labels:["Attack","Health","Delay"],series:[{value:avgAttack,className:"ct-series-attack"},{value:avgHealth,className:"ct-series-health"},{value:avgDelay,className:"ct-series-delay"}]};new Chartist.Bar("#averagesChart",data,options).on("draw",function(data){var barHorizontalCenter,barVerticalCenter,label,value;if("bar"===data.type&&(barHorizontalCenter=data.x1+.5*data.element.width(),barVerticalCenter=data.y1+-1*data.element.height()-10,"0"!==(value=data.element.attr("ct:value"))))return(label=new Chartist.Svg("text")).text(value),label.addClass("ct-barlabel"),label.attr({x:barHorizontalCenter,y:barVerticalCenter,"text-anchor":"middle"}),data.group.append(label)});options={width:450,height:200,labelInterpolationFnc:function(label,i){return data.series[i].value},plugins:[Chartist.plugins.legend()]};var labels=[];data=[];for(var key in types){var factionName=factions.names[key];labels.push(factionName),data.push({value:types[key],className:"ct-series-"+factionName})}data={labels:labels,series:data};new Chartist.Pie("#factionChart",data,options),options.labelInterpolationFnc=function(label,i){return data2.series[i].value};labels=[];var data2=[];for(var key in sub_types){factionName=factions.names[key];labels.push(factionName),data2.push({value:sub_types[key],className:"ct-series-"+factionName})}data2={labels:labels,series:data2};new Chartist.Pie("#subfactionChart",data2,options);for(attackStats=[],healthStats=[],delayStats=[],types={},sub_types={},i=0;i<deck.deck.length;i++){var card,subFactions;unit=deck.deck[i];delays[(card=cardApi.byId(unit)).cost]++,types[card.type]=(types[card.type]||0)+1,attackStats.push(Number(card.attack)),healthStats.push(Number(card.health)),delayStats.push(Number(card.cost)),(subFactions=card.sub_type).length||subFactions.push(0);for(s=0;s<subFactions.length;s++){var subFaction;sub_types[subFaction=subFactions[s]]=(sub_types[subFaction]||0)+1}}var numericSort=function(a,b){return a-b};function sum(total,num){return total+num}function average(ary){return ary.length?(ary.reduce(sum)/ary.length).toFixed(0):0}attackStats.sort(numericSort),healthStats.sort(numericSort),delayStats.sort(numericSort);avgAttack=average(attackStats),avgHealth=average(healthStats),avgDelay=average(delayStats),options={width:300,height:200,axisY:{onlyInteger:!0},plugins:[Chartist.plugins.legend(),Chartist.plugins.tooltip()],series:{Attack:{lineSmooth:Chartist.Interpolation.simple()},Health:{lineSmooth:Chartist.Interpolation.simple()},Delay:{lineSmooth:Chartist.Interpolation.simple()}}};new Chartist.Line("#statChart",{series:[{name:"Attack",className:"ct-series-attack",data:attackStats},{name:"Health",className:"ct-series-health",data:healthStats},{name:"Delay",className:"ct-series-delay",data:delayStats}]},options);var HPPL=(cardApi.byId(deck.commander).health+healthStats.reduce(function(prev,curr){return prev+curr},0))/15,healthNeeded=(labels=[],[]);for(i=0;i<=15;i++)labels.push(130-i),healthNeeded.push(Math.ceil(HPPL*i));options={width:500,height:200,axisY:{onlyInteger:!0},plugins:[Chartist.plugins.legend(),Chartist.plugins.tooltip()]};new Chartist.Line("#hpplChart",{labels:labels,series:[{name:"Health Lost",className:"ct-series-attack",data:healthNeeded}]},options)}var changeTracking=[],currentChange=-1;function addChange(hash){disableTracking||(changeTracking[++currentChange]=hash,changeTracking.length=currentChange+1,100<currentChange&&(currentChange--,changeTracking.splice(0,1)))}function KeyPress(e){var evtobj=window.event?event:e;evtobj.ctrlKey&&(90===evtobj.keyCode?undo():89===evtobj.keyCode&&redo())}function stopPropagation(id){document.getElementById(id).onkeydown=function(e){e.stopPropagation()}}function undo(){if(0<currentChange){var $hash=$(document.getElementById("hash"));$hash.on("focus",preventFocus),disableTracking=!0;var hash=changeTracking[--currentChange];setHash(hash),deck=base64.decodeHash(hash),doDrawDeck(),$hash.off("focus"),disableTracking=!1}}function redo(){if(currentChange<changeTracking.length-1){var $hash=$(document.getElementById("hash"));$hash.on("focus",preventFocus),disableTracking=!0;var hash=changeTracking[++currentChange];setHash(hash),deck=base64.decodeHash(hash),doDrawDeck(),$hash.off("focus"),disableTracking=!1}}function preventFocus(event){$(this).blur(),event.stopPropagation()}function makeOnClickFilter(filterFunction){return function(event){var button=event.target,filter=button.getAttribute("data-filter"),altKey=event.altKey;filterFunction(button,filter,altKey)}}function filterAdvanced(skill){for(var info={id:skill,x:void 0,y:void 0,c:void 0,s:void 0,all:void 0},i=0;i<skillFiltersAdv.length;i++)if(skillFiltersAdv[i].id===skill){skillFiltersAdv.splice(i,1);break}if("none"!==$("div#amount")[0].style.display){var min=parseInt($("#amount-min")[0].value),max=parseInt($("#amount-max")[0].value);isNaN(min)&&(min=0),isNaN(max)&&(max=99),info.x={min:min,max:max}}if("none"!==$("div#timer")[0].style.display){min=parseInt($("#timer-min")[0].value),max=parseInt($("#timer-max")[0].value);isNaN(min)&&(min=0),isNaN(max)&&(max=99),info.c={min:min,max:max}}if("none"!==$("div#faction")[0].style.display){var faction=$("select#faction")[0].value;info.y="Generic"===faction?-1:factions.IDs[faction]}"none"!==$("div#skill")[0].style.display&&0<$("select#skill")[0].value.length&&(info.s=$("select#skill")[0].value),"none"!==$("label[for=all]")[0].style.display&&(info.all=$("select#all")[0].value);var classList=$("input[name=skill][data-filter="+skill+"]")[0].classList;classList.add("selected-advanced"),skillFiltersAdv.push(info),classList.contains("selected")&&(classList.remove("selected"),skillFilters.splice(skillFilters.indexOf(skill),1),checkBasicSkillFilters()),classList.contains("excluded")&&(classList.remove("excluded"),skillExclusions.splice(skillFilters.indexOf(skill),1),checkBasicSkillFilters()),checkAdvancedFilters()}function checkAdvancedFilters(){skillHiddenAdv={};for(var i=0;i<units.length;i++)for(var unit=units[i],s=0;s<skillFiltersAdv.length;s++)hasSkillAdvanced(unit,skillFiltersAdv[s])||(skillHiddenAdv[makeUnitKey(unit)]=!0);applyFilters()}function filterSkill(button,skill,exclude){if(button.classList.contains("selected"))button.classList.remove("selected"),skillFilters.splice(skillFilters.indexOf(skill),1);else if(button.classList.contains("excluded"))button.classList.remove("excluded"),skillExclusions.splice(skillFilters.indexOf(skill),1);else{if(button.classList.contains("selected-advanced")){button.classList.remove("selected-advanced");for(var i=0;i<skillFiltersAdv.length;i++)if(skillFiltersAdv[i].id===skill){skillFiltersAdv.splice(i,1);break}return void checkAdvancedFilters()}exclude?(button.classList.add("excluded"),skillExclusions.push(skill)):(button.classList.add("selected"),skillFilters.push(skill))}checkBasicSkillFilters(),applyFilters()}function checkBasicSkillFilters(){if(skillHidden={},0<skillFilters.length+skillExclusions.length)for(var i=0;i<units.length;i++){for(var unit=units[i],s=0;s<skillFilters.length;s++)if(!hasSkill(unit,skillFilters[s])){skillHidden[makeUnitKey(unit)]=!0;break}for(s=0;s<skillExclusions.length;s++)if(hasSkill(unit,skillExclusions[s])){skillHidden[makeUnitKey(unit)]=!0;break}}}function filterFaction(button,faction){if(factionHidden={},button.classList.contains("selected"))button.classList.remove("selected"),button.checked=!1;else{button.classList.add("selected");for(var i=0,len=units.length;i<len;i++){var unit=units[i];isInFaction(unit,faction)||(factionHidden[makeUnitKey(unit)]=!0)}}var filters=document.getElementsByName("faction");for(i=0;i<filters.length;i++){var filter=filters[i];filter!==button&&filter.classList.remove("selected")}applyFilters()}document.onkeydown=KeyPress;var filterName=function(event){var filter=event.target.value.toLowerCase();if(nameHidden={},filter)if(0===filter.indexOf("[")||filter.indexOf("]")-filter.length==-1){0!==filter.indexOf("[")&&(filter=".*"+filter),filter.indexOf("]")-filter.length!=-1&&(filter+=".*");for(var idRegex=new RegExp("^"+filter.replace("[","").replace("]","")+"$"),i=0,len=units.length;i<len;i++){var unit_id=(unit=units[i]).id;idRegex.test(unit_id.toString())||(nameHidden[makeUnitKey(unit)]=!0)}}else for(i=0,len=units.length;i<len;i++){var unit=units[i],card=cardApi.byIdSlim(unit,!0);card.name&&-1!==card.name.toLowerCase().indexOf(filter)||(nameHidden[makeUnitKey(unit)]=!0)}applyFilters()}.throttle(250);function filterSubfaction(button,faction,exclude){button.classList.contains("selected")||button.classList.contains("excluded")?(button.classList.remove("selected"),button.classList.remove("excluded"),button.checked=!1):exclude?(button.classList.add("excluded"),button.classList.remove("selected")):(button.classList.remove("excluded"),button.classList.add("selected")),subfactionHidden={};for(var subfactions=$("[name=subfaction].selected").toArray().map(function(a){return a.attributes["data-filter"].value}),exclusions=$("[name=subfaction].excluded").toArray().map(function(a){return a.attributes["data-filter"].value}),i=0,len=units.length;i<len;i++){for(var unit=units[i],s=0;s<subfactions.length;s++)isInSubfaction(unit,subfactions[s])||(subfactionHidden[makeUnitKey(unit)]=!0);for(var e=0;e<exclusions.length;e++)isInSubfaction(unit,exclusions[e])&&(subfactionHidden[makeUnitKey(unit)]=!0)}applyFilters()}function filterDualFaction(button,faction,exclude){var show;if(button.classList.contains("selected")||button.classList.contains("excluded")?(button.classList.remove("selected"),button.classList.remove("excluded"),button.checked=!1):show=exclude?(button.classList.add("excluded"),button.classList.remove("selected"),!1):(button.classList.remove("excluded"),button.classList.add("selected"),!0),dualFactionHidden={},void 0!==show)for(var i=0,len=units.length;i<len;i++){var unit=units[i];isDualFaction(unit)!==show&&(dualFactionHidden[makeUnitKey(unit)]=!0)}applyFilters()}var filterAttack=rangeFilter("attack",attackRanges,attackHidden,function(){attackHidden={}},function(unit){attackHidden[makeUnitKey(unit)]=!0}),filterHealth=rangeFilter("health",healthRanges,healthHidden,function(){healthHidden={}},function(unit){healthHidden[makeUnitKey(unit)]=!0});function rangeFilter(statName,statRanges,hiddenField,clearHidden,setHidden){return function(button,min,max){if(clearHidden(),button.classList.contains("selected")){button.classList.remove("selected"),button.checked=!1;for(var i=0;i<statRanges.length;i++)if(statRanges[i][0]===min){statRanges.splice(i,1);break}}else button.classList.add("selected"),statRanges.push([min,max]);if(0<statRanges.length){i=0;for(var len=units.length;i<len;i++){for(var unit=units[i],hide=!0,j=0;j<statRanges.length;j++){var range=statRanges[j];if(isInRange(unit,statName,range[0],range[1])){hide=!1;break}}hide&&setHidden(unit)}}applyFilters()}}function filterDelay(button,delay,exclude){if(delayHidden={},button.classList.contains("selected")){button.classList.remove("selected"),button.checked=!1;for(var i=0;i<delayRanges.length;i++)if(delayRanges[i]===delay){delayRanges.splice(i,1);break}}else if(button.classList.contains("excluded")){button.classList.remove("excluded"),button.checked=!1;for(i=0;i<delayExclusions.length;i++)if(delayExclusions[i]===delay){delayExclusions.splice(i,1);break}}else exclude?(button.classList.add("excluded"),delayExclusions.push(delay)):(button.classList.add("selected"),delayRanges.push(delay));if(0<delayExclusions.length){i=0;for(var len=units.length;i<len;i++){for(var unit=units[i],hide=!1,j=0;j<delayExclusions.length;j++){if(isInRange(unit,"cost",delay=delayExclusions[j],delay)){hide=!0;break}}hide&&(delayHidden[makeUnitKey(unit)]=!0)}}if(0<delayRanges.length)for(i=0,len=units.length;i<len;i++){for(unit=units[i],hide=!0,j=0;j<delayRanges.length;j++){if(isInRange(unit,"cost",delay=delayRanges[j],delay)){hide=!1;break}}hide&&(delayHidden[makeUnitKey(unit)]=!0)}applyFilters()}function filterType(button,type){if(typeHidden={},button.classList.contains("selected")){button.classList.remove("selected"),button.checked=!1;for(var i=0;i<typeFilters.length;i++)if(typeFilters[i]===type){typeFilters.splice(i,1);break}}else button.classList.add("selected"),typeFilters.push(type);if(0<typeFilters.length){i=0;for(var len=units.length;i<len;i++){for(var unit=units[i],hide=!0,j=0;j<typeFilters.length;j++){if(isInRange(unit,"card_type",type=typeFilters[j],type)){hide=!1;break}}hide&&(typeHidden[makeUnitKey(unit)]=!0)}}applyFilters()}function filterFusion(button,fusion){if(fusionHidden={},button.classList.contains("selected")){button.classList.remove("selected"),button.checked=!1;for(var i=0;i<fusionFilters.length;i++)if(fusionFilters[i]===fusion){fusionFilters.splice(i,1);break}}else button.classList.add("selected"),fusionFilters.push(fusion);if(0<fusionFilters.length){i=0;for(var len=units.length;i<len;i++){for(var unit=units[i],id=unit.id.toString(),hide=(fusion=4<id.length?id[0]:"",!0),j=0;j<fusionFilters.length;j++)if(fusion===fusionFilters[j]){hide=!1;break}hide&&(fusionHidden[makeUnitKey(unit)]=!0)}}applyFilters()}function showAdvancedFilters(skill){$("label[for=all]").hide(),$("div#amount").hide(),$("div#faction").hide(),$("div#skill").hide(),$("div#timer").hide(),$("#amount-min")[0].value=0,$("#amount-max")[0].value=99,$("#timer-min")[0].value=0,$("#timer-max")[0].value=99,$("select#faction")[0].value="",$("select#skill")[0].value="",$("select#all")[0].value=-1;for(var i=0;i<skillFiltersAdv.length;i++){var skillInfo=skillFiltersAdv[i];if(skillInfo.id===skill){skillInfo.x&&($("#amount-min")[0].value=skillInfo.x.min,$("#amount-max")[0].value=skillInfo.x.max),skillInfo.c&&($("#timer-min")[0].value=skillInfo.c.min,$("#timer-max")[0].value=skillInfo.c.max),skillInfo.y&&-1==skillInfo.y&&($("select#faction")[0].value="Generic"),skillInfo.s&&($("select#skill")[0].value=skillInfo.s),skillInfo.all&&($("select#all")[0].value=skillInfo.all);break}}switch(skill){case"absorb":case"armored":case"barrage":case"backlash":case"berserk":case"burn":case"corrosive":case"counter":case"counterburn":case"evade":case"evadebarrier":case"frost":case"fury":case"heartseeker":case"leech":case"nullify":case"pierce":case"poison":case"regenerate":case"scorchbreath":case"stasis":case"taunt":case"valor":$("div#amount").show();break;case"silence":$("div#amount").show(),$("div#faction").show();break;case"fervor":case"legion":case"reanimate":case"resurrect":$("div#amount").show(),$("div#faction").show(),$("div#timer").show();break;case"enrage":case"heal":case"protect":case"protect_ice":case"rally":$("div#amount").show(),$("label[for=all]").show(),$("div#faction").show();break;case"enfeeble":case"poisonstrike":case"strike":case"weaken":case"weakenself":$("div#amount").show(),$("label[for=all]").show();break;case"enhance":case"imbue":$("div#amount").show(),$("label[for=all]").show(),$("div#faction").show(),$("div#skill").show(),$("div#timer").show();break;case"jam":$("label[for=all]").show(),$("div#timer").show();break;case"flurry":$("div#timer").show();break;default:return null}return advancedFilters.dialog("option","position",{mw:"center",at:"center",of:$("[data-filter="+skill+"]")[0]}),advancedFilters.dialog("open"),advancedFilters.skill=skill,!1}function showCardOptions(event,htmlCard){event.preventDefault();var show=!1,index=$(htmlCard).index()-1;if(index<0)var unit=deck.commander;else unit=deck.deck[index];optionsDialog.index=index;var card=cardApi.byId(unit);$("#upgradeDiv").hide();var upgradeLevel=document.getElementById("upgrade");upgradeLevel.max=card.maxLevel,upgradeLevel.value=card.level,1<card.maxLevel&&($("#upgradeDiv").show(),show=!0);var fusionField=document.getElementById("fusion");if(fusionField.value=0,$("#fusionDiv").hide(),!card.isCommander()){var fusion=1;if(4<(baseID=card.id.toString()).length){fusion=parseInt(baseID[0])+1;var baseID=baseID.substring(1)}FUSIONS[baseID]&&(fusionField.value=fusion,$("#fusionDiv").show(),show=!0)}return"none"===$("#upgradeDiv").css("display")||"none"===$("#fusionDiv").css("display")?$("#upgradeDiv").add("#fusionDiv").toggleClass("split",!1):$("#upgradeDiv").add("#fusionDiv").toggleClass("split",!0),showRunePicker(card)&&(show=!0),show&&(disableTracking=!0,optionsDialog.dialog("option","position",{my:"left",at:"right",of:htmlCard}),optionsDialog.dialog("open"),optionsDialog.unit=unit,optionsDialog.originalUnit=$.extend({},unit)),!1}function hideContext(event){return event.preventDefault(),!1}function showRunePicker(card){var select=document.getElementById("runeChoices");if(select.innerHTML='<option value=""></option>',optionsDialog.hiddenOptions=[],$("#runeChoicesDiv").hide(),3<=card.rarity&&!card.isCommander()){for(var runeID in RUNES){var rune=runeApi.getRune(runeID);if(runeApi.canUseRune(card,rune)){var option=document.createElement("option");option.appendChild(document.createTextNode(rune.desc)),option.value=rune.id,select.appendChild(option)}}return card.runes.length?document.getElementById("runeChoices").value=card.runes[0].id:document.getElementById("runeChoices").value="",0<select.childNodes.length&&($("#runeChoicesDiv").show(),!0)}return!1}function modifyCard(optionsDialog){if(void 0!==(unit=optionsDialog.unit)){var runeID=document.getElementById("runeChoices").value;unit.runes=runeID?[{id:runeID}]:[]}else var unit=deck.commander;unit.level=parseInt(document.getElementById("upgrade").value);var fusion=document.getElementById("fusion").value;if(fusion){fusion=(fusion-1).toString();var unitID=unit.id.toString();4<unitID.length&&(unitID=unitID.substring(1)),0<=fusion&&(unitID=fusion+unitID),unit.id=parseInt(unitID)}showRunePicker(cardApi.byId(unit)),setCard(optionsDialog.index,unit),setHash(base64.encodeHash(deck))}function resetCard(optionsDialog){setCard(optionsDialog.index,optionsDialog.originalUnit),setHash(base64.encodeHash(deck))}function setCard(index,unit){index<0?deck.commander=unit:deck.deck[index]=unit;var htmlCard=cardUI.cardToHtml(cardApi.byId(unit),!1,!1);$deck.find(".card").eq(index+1).replaceWith(htmlCard)}function filterSet(button,sets,exclude){setHidden={};var clear=null;if(button.classList.contains("selected")?(button.classList.remove("selected"),button.checked=!1,clear="selected"):button.classList.contains("excluded")?(button.classList.remove("excluded"),button.checked=!1,clear="excluded"):exclude?button.classList.add("excluded"):button.classList.add("selected"),sets.split(",").forEach(function(set){switch(clear){case"selected":setFilters.splice(setFilters.indexOf(set),1);break;case"excluded":setExclusions.splice(setExclusions.indexOf(set),1);break;default:exclude?setExclusions.push(set):setFilters.push(set)}}),0<setFilters.length+setExclusions.length)for(var i=0,len=units.length;i<len;i++){for(var unit=units[i],show=0===setFilters.length,j=0;j<setFilters.length;j++){if(isInRange(unit,"set",set=setFilters[j],set)){show=!0;break}}if(show){var hide=!1;for(j=0;j<setExclusions.length;j++){var set;if(isInRange(unit,"set",set=setExclusions[j],set)){hide=!0;break}}}show&&!hide||(setHidden[makeUnitKey(unit)]=!0)}applyFilters()}function filterRarity(button,rarity){if(rarityHidden={},button.classList.contains("selected")){button.classList.remove("selected"),button.checked=!1;for(var i=0;i<rarityFilters.length;i++)if(rarityFilters[i]===rarity){rarityFilters.splice(i,1);break}}else button.classList.add("selected"),rarityFilters.push(rarity);if(0<rarityFilters.length){i=0;for(var len=units.length;i<len;i++){for(var unit=units[i],hide=!0,j=0;j<rarityFilters.length;j++){if(isInRange(unit,"rarity",rarity=rarityFilters[j],rarity)){hide=!1;break}}hide&&(rarityHidden[makeUnitKey(unit)]=!0)}}applyFilters()}function applyFilters(keepPage,skipDraw){unitsFiltered=[];for(var names=[],addedNames={},i=0,len=unitsShown.length;i<len;i++){var unit=unitsShown[i],key=makeUnitKey(unit);if(skillHidden[key]||factionHidden[key]||subfactionHidden[key]||attackHidden[key]||healthHidden[key]||delayHidden[key]||typeHidden[key]||fusionHidden[key]||setHidden[key]||nameHidden[key]||rarityHidden[key]||skillHiddenAdv[key]||dualFactionHidden[key]);else{unitsFiltered.push(unit);var card=cardApi.byId(unit);addedNames[card.name]||(names.push(card.name),addedNames[card.name]=!0)}}$nameFilter.autocomplete("option",{source:names}),skipDraw||doDrawCardList(unitsFiltered,!keepPage)}function hasSkill(unit,skill){for(var skills=cardApi.byIdSlim(unit,!0).skill,i=0,len=skills.length;i<len;i++)if(skill===skills[i].id)return!0;return!1}function hasSkillAdvanced(unit,skillInfo){for(var skills=cardApi.byIdSlim(unit,!0).skill,i=0,len=skills.length;i<len;i++){var skill=skills[i];if(skillInfo.id===skill.id){if(skillInfo.x&&(skill.x<skillInfo.x.min||skill.x>skillInfo.x.max))continue;if(skillInfo.c&&(skill.c<skillInfo.c.min||skill.c>skillInfo.c.max))continue;if(-1==skillInfo.y&&skill.y)continue;if(0<skillInfo.y&&skill.y!=skillInfo.y)continue;if(skillInfo.s&&skill.s!==skillInfo.s)continue;if(-1<skillInfo.all&&(skill.all||"0")!==skillInfo.all)continue;return!0}}return!1}function clearFilters(){attackHidden={},attackRanges=[],healthHidden={},healthRanges=[],delayHidden={},delayRanges=[],delayExclusions=[],skillFilters=[],skillExclusions=[],skillHidden={},skillFiltersAdv=[],skillHiddenAdv={},factionHidden={},subfactionHidden={},dualFactionHidden={},rarityFilters=[],rarityHidden={},typeFilters=[],typeHidden={},setFilters=[],setExclusions=[],setHidden={},fusionFilters=[],fusionHidden={},nameHidden={},$(".selected").removeClass("selected"),$(".excluded").removeClass("excluded"),$(".selected-advanced").removeClass("selected-advanced"),$("#nameFilter").val(""),applyFilters()}function isInFaction(unit,faction){var factionID=factions.IDs[faction].toString();return cardApi.byIdSlim(unit,!0).type===factionID}function isInSubfaction(unit,faction){var factionID=factions.IDs[faction],card=cardApi.byIdSlim(unit,!0);return void 0===factionID?0===card.sub_type.length:0<=card.sub_type.indexOf(factionID.toString())}function isDualFaction(unit){return 1<cardApi.byIdSlim(unit,!0).sub_type.length}function isInRange(unit,field,min,max){var value=cardApi.byIdSlim(unit,!0)[field];return void 0!==value&&(!(0<=min&&value<min)&&!(0<=max&&max<value))}function toggleSkillDetails(){applyFilters(!0)}function toggleUpgrades(event){showUpgrades=event.target.checked,$("body").addClass("loading"),setTimeout(function(){drawCardList(),$("body").removeClass("loading"),applyFilters(!1)},1)}function sortAndDraw(event){doSort(event.target),applyFilters()}function sortCards(){doSort(document.getElementById("sortField"))}function doSort(select){var sortField=select.value;unitsShown.sort(function(unitA,unitB){var comparison=cardInfo.isCommander(unitB.id)-cardInfo.isCommander(unitA.id);if(0!==comparison)return comparison;if("id"===sortField)return compareByID(unitA,unitB);var cardA=cardApi.byId(unitA),cardB=cardApi.byId(unitB);return 0!==(comparison="sub_type"===sortField?compareBySubfactions(cardA,cardB):(cardA[sortField]||0)-(cardB[sortField]||0))?comparison:compareByID(unitA,unitB)})}function compareByID(unitA,unitB){var comparison,unitIDA=unitA.id,unitIDB=unitB.id;return 0!==(comparison=unitIDA%1e4-unitIDB%1e4)?comparison:0!==(comparison=unitIDA-unitIDB)?comparison:0!==(comparison=unitA.level-unitB.level)?comparison:sortByRunes(unitA,unitB)}function compareBySubfactions(cardA,cardB){for(var subfactionsA=cardA.sub_type,subfactionsB=cardB.sub_type,maxSubfactions=Math.max(subfactionsA.length,subfactionsB.length),i=0;i<maxSubfactions;i++){var comparison=(subfactionsA[i]||-1)-(subfactionsB[i]||-1);if(comparison)return comparison}return 0}function sortByRunes(unitA,unitB){var comparison=unitA.runes.length-unitB.runes.length;return 0!==comparison?comparison:unitA.runes.length?unitA.runes[0].id-unitB.runes[0].id:0}function getUnitFromCard(htmlCard){for(var unit={id:htmlCard.attributes.getNamedItem("data-id").value,level:htmlCard.attributes.getNamedItem("data-level").value},runeIDs=htmlCard.attributes.getNamedItem("data-runeids").value.split(","),runes=[],i=0,len=runeIDs.length;i<len;i++){var runeID=runeIDs[i];0<runeID&&runes.push({id:runeID})}var index=htmlCard.attributes.getNamedItem("data-index");return index&&(unit.index=index.value),unit.runes=runes,unit}var skillStyle=document.createElement("style");function setDeckName(name){document.getElementById("version_label").innerHTML+=" "+name}function saveDeck(){var hash=$("#hash").val();$("#saveDeckName").val("");var savedDecks=storageAPI.getSavedDecks();for(var name in savedDecks){if(hash===savedDecks[name]){$("#saveDeckName").val(name);break}}saveDeckDialog.dialog("option","position",{my:"center",at:"center",of:window}),saveDeckDialog.dialog("open")}function loadDeck(){$('label[for="loadDeckName"]').html("<strong>Deck:</strong>"),loadDeckDialog.dialog("option","position",{my:"center",at:"center",of:window}),loadDeckDialog.dialog("open"),loadDeckDialog.onloaded=hash_changed}function loadInventory(){$('label[for="loadDeckName"]').html("<strong>Inventory:</strong>"),loadDeckDialog.dialog("option","position",{my:"center",at:"center",of:window}),loadDeckDialog.dialog("open"),loadDeckDialog.onloaded=setInventory}function setInventory(hash){inventory=hash,drawCardList(),generateLink()}function toggleInventoryMode(){if(inventoryMode=!inventoryMode)$("#inventoryMode").val("Switch to Deck Builder"),$deck.find(".card.blank").remove(),$deck.sortable("disable"),doDrawDeck();else{$("#inventoryMode").val("Switch to Inventory Builder");for(var i=$deck.find(".card").length;i<16;i++)$deck.append("<div class='card blank'></div>");$deck.sortable("enable"),doDrawDeck()}generateLink()}function generateLink(){var params=[],name=urlHelper.paramValue("name"),hash=$("#hash").val();name&&params.push("name="+name),hash&&params.push("hash="+hash),inventory&&params.push("inventory="+base64.encodeHash({commander:unitInfoHelper.defaultCommander,deck:inventory})),inventoryMode&&params.push("unlimited"),urlHelper.paramDefined("spoilers")&&params.push("spoilers");var link="http://thesench.github.io/SIMSpellstone/DeckBuilder.html";params.length&&(link+="?"+params.join("&")),$("#link").attr("href",link).text(link)}skillStyle.type="text/css",document.getElementsByTagName("head")[0].appendChild(skillStyle),function(angular){"use strict";var module,storageAPI=require("storageAPI");try{module=angular.module("simulatorApp")}catch(loadError){module=angular.module("simulatorApp",[])}module.controller("DeckStorageCtrl",["$scope",function($scope){$scope.getSavedDecks=storageAPI.getSavedDecks,$scope.keys=function(obj){return obj?Object.keys(obj):[]}}])}(angular),function(angular){"use strict";var cardInfo=require("cardInfo"),factions=require("factions"),unitInfoHelper=require("unitInfoHelper"),rarityStrings=["","Common","Rare","Epic","Legendary","Mythic"];function getCardInfo(unit){var id=unit.id,unitLevel=unit.level,original=cardInfo.loadCard(id),card=Object.assign({},original);if(1<unitLevel&&1<unitLevel)for(var key in original.upgrades){var upgradeLevel=parseInt(key),upgrade=original.upgrades[key];if(void 0!==upgrade.cost&&(card.cost=upgrade.cost),void 0!==upgrade.health&&(card.health=upgrade.health),void 0!==upgrade.attack&&(card.attack=upgrade.attack),void 0!==upgrade.desc&&(card.desc=upgrade.desc),0<upgrade.skill.length&&(card.skill=upgrade.skill),upgradeLevel===unitLevel)break}return card.level=unitLevel,card.maxLevel=original.maxLevel,card}angular.module("simulatorApp").controller("CardDetailsCtrl",["$scope","$window",function($scope,$window){var image;($window.cardDetailScope=$scope).id&&$scope.level&&($scope.unit=unitInfoHelper.create($scope.id,$scope.level),$scope.card=getCardInfo($scope.unit)),$scope.setUnit=function(unit){var hiddenUntil;return $scope.id=unit.id,$scope.level=unit.level,$scope.unit=unitInfoHelper.create($scope.id,$scope.level),$scope.card=getCardInfo($scope.unit),$scope.releaseDate=hiddenUntil=(hiddenUntil=$scope.card.hidden_until)?(hiddenUntil=new Date(Number(hiddenUntil))).getMonth()+1+"/"+hiddenUntil.getDate()+"/"+hiddenUntil.getFullYear():"",this},$scope.visible=!1,$scope.imageSrc="res/cardImagesLarge/NotFound.jpg",$scope.$watch("card.id",function(newValue){if(newValue){var extension=".jpg";cardInfo.isCommander(newValue)&&(extension=".png"),(image=new Image).onerror=function(){this.onerror=function(){this.onerror=null,this.src="res/cardImagesLarge/NotFound.jpg"},this.src=this.src.replace("ImagesLarge","Images")},image.onload=function(){this.onerror=null,this.onload=null,$scope.imageSrc=image.src,$scope.$apply()},image.src="res/cardImagesLarge/"+cardInfo.loadCard(newValue).picture+extension}else $scope.imageSrc="res/cardImagesLarge/NotFound.jpg"}),$scope.commanderClass=function(){return cardInfo.isCommander($scope.id)?"commander "+$scope.getFaction($scope.card.type).toLowerCase():""},$scope.getRarityString=function(){return rarityStrings[$scope.card.rarity]},$scope.fontSize=function(){var numChars=$("#rarity-string").text().length;return{"font-size":Math.ceil(71e3/(numChars*numChars))+"px"}},$scope.showRarity=function(){var card=$scope.card;return 0<card.rarity||1<card.maxLevel},$scope.getRarityIcon=function(){var card=$scope.card;return 0<card.rarity?"res/cardAssets/Level_"+card.rarity+(card.maxLevel>Number(card.rarity)+2?"_"+card.maxLevel:"")+"_"+card.level+".png":1<card.maxLevel?"res/cardAssets/"+card.maxLevel+"_"+card.level+".png":void 0};var previousFusion=$scope.previousFusion=function(){var fusions=$window.FUSIONS;for(var key in fusions)if(fusions[key]===$scope.id)return key;return!1},nextFusion=$scope.nextFusion=function(){return $window.FUSIONS[$scope.id]};$scope.previousLevel=function(){return 1<$scope.card.level},$scope.nextLevel=function(){return $scope.card.level<$scope.card.maxLevel};var getFusion=$scope.getFusion=function(){var id=Number($scope.id);return Math.floor(id/1e4)+1};$scope.fusionText=function(){return{1:"Single",2:"Dual",3:"Quad"}[getFusion()]},$scope.keyPress=function(event){var fn;switch(event.which){case 37:fn="decrementLevel";break;case 38:fn="incrementFusion";break;case 39:fn="incrementLevel";break;case 40:fn="decrementFusion"}fn&&($scope[fn](),event.preventDefault(),event.stopPropagation())},$scope.isFused=function(){return 1<getFusion()},$scope.getFusionIcon=function(){return"res/cardAssets/"+(2===getFusion()?"Dualfuse":"Quadfuse")+".png"},$scope.getSkillIcon=function(skillID){var skillData=SKILL_DATA[skillID];return"res/skills/"+(skillData?skillData.icon:skillID)+".png"},$scope.getSkillDescription=function(skillID){var skillData=SKILL_DATA[skillID];return skillData?skillData.desc||skillData.name:skillID};var setNames={1e3:"Basic",7e3:"Basic",2e3:"Reward",3e3:"Premium",4e3:"BoxOnly",9999:"StoryElements"};$scope.getSetIcon=function(){var setName=setNames[$scope.card.set];return setName||(setName=setNames[9999]),"res/cardAssets/"+setName+"_64x64.png"},$scope.getFaction=function(factionID){var faction=factions.names[factionID];return"Tower"===faction&&(faction=""),faction},$scope.decrementFusion=function(){var fused=previousFusion(Number($scope.id));fused&&($scope.id=fused,$scope.unit.id=$scope.id,$scope.card=getCardInfo($scope.unit),$scope.level>$scope.card.maxLevel&&($scope.level=$scope.card.maxLevel,$scope.unit.level=$scope.level,$scope.card=getCardInfo($scope.unit)))},$scope.incrementFusion=function(){var fused=nextFusion(Number($scope.id));if(fused){var max=$scope.level===$scope.card.maxLevel;$scope.id=fused,$scope.unit.id=$scope.id,$scope.card=getCardInfo($scope.unit),max&&$scope.level<$scope.card.maxLevel&&($scope.level=$scope.card.maxLevel,$scope.unit.level=$scope.level,$scope.card=getCardInfo($scope.unit))}},$scope.decrementLevel=function(){$scope.level=$scope.level,1<$scope.level&&$scope.level--,$scope.unit.level=$scope.level,$scope.card=getCardInfo($scope.unit)},$scope.incrementLevel=function(){$scope.level=$scope.level,$scope.level<$scope.card.maxLevel&&$scope.level++,$scope.unit.level=$scope.level,$scope.card=getCardInfo($scope.unit)}}]).directive("ngRightClick",["$parse",function($parse){return{link:function(scope,element,attrs){var fn=$parse(attrs.ngRightClick);element.contextmenu(function(event){scope.$apply(function(){event.preventDefault(),fn(scope,{$event:event})})})}}}]).directive("cardDetails",function(){return{restrict:"A",replace:!0,templateUrl:"templates/card-template.html",controller:"CardDetailsCtrl"}}).directive("sssAutofocus",function(){return{link:function(scope,elem){elem.focus()}}}).filter("capitalize",function(){return function(input){if(input){for(var parts=input.split(" "),i=0;i<parts.length;i++){var part=parts[i];parts[i]=part.charAt(0).toUpperCase()+part.substr(1)}return parts.join(" ")}return""}}).filter("skillApi.nameFromId",function(){return window.skillApi.nameFromId}).controller("DeckBuilderCtrl",["$scope","$window",function($scope,$window){$scope.getSkillIcon=function(skillID){var skillData=SKILL_DATA[skillID];return"res/skills/"+(skillData?skillData.icon:skillID)+".png"},$scope.supportedSkills=["absorb","armored","backlash","barrage","berserk","burn","corrosive","counter","counterburn","daze","enfeeble","enhance","enrage","evade","evadebarrier","fervor","flurry","frost","fury","heal","heartseeker","imbue","jam","leech","legion","nullify","pierce","poison","poisonstrike","protect","rally","regenerate","scorchbreath","silence","stasis","strike","taunt","valor","weaken","weakenself"].sort(function(idA,idB){return SKILL_DATA[idA].name.localeCompare(SKILL_DATA[idB].name)}),$scope.getSkillName=function(skillID){var skillData=SKILL_DATA[skillID];return skillData?skillData.name:skillID},$scope.showAdvancedFilters=$window.showAdvancedFilters,$scope.filterSkill=function(event,skillID){$window.filterSkill(event.target,skillID,event.altKey)}}])}(angular),define("tutorialScript",["simTutorial"],function(simTutorial){"use strict";function showDeck(){$("#deck-container").accordion("option","active",0)}function hideFilters(){$("#filter-container").accordion("option","active",null)}function hideCollection(){$("#collection-container").accordion("option","active",null)}function closeDetails(){detailsDialog.dialog("close")}function filter(){for(var fervor=$("[name=skill][data-filter=fervor]");!fervor.hasClass("selected");)fervor.click()}function filterExclusive(){var vengeance=$("[name=skill][data-filter=enfeeble]"),e=jQuery.Event("click");for(e.altKey=!0;!vengeance.hasClass("excluded");)vengeance.trigger(e)}function advancedFilter(){$("[name=skill][data-filter=fervor]").contextmenu(),resetFocus()}function saveAdvancedFilters(){advancedFilters.dialog("option","buttons").OK.apply(advancedFilters),resetFocus()}function setNameFilter(){$("#nameFilter").val("hide").trigger(jQuery.Event("keyup"))}function clearFilters(){$("#clear-filters").click()}function setHash(){updateHash("g~pAAQwrxIQWkpBglFpBglFpB4jrBC4jrBC4jrBC")}function removeCard(){updateHash("g~pAAQwrxIQWkpBglFpB4jrBC4jrBC4jrBC")}function moveCard(){updateHash("g~pAAQwrxIglFpBQWkpBglFpB4jrBC4jrBC4jrBC")}function editCard(){$("#deck .card").eq(1).contextmenu(),resetFocus()}function makeCardEdits(){$("#fusion").val(3),$("#runeChoices").val("5102").change(),resetFocus()}function closeEditUnit(){optionsDialog.dialog("close")}function clearHash(){updateHash("QpLQA")}function resetFocus(){$(".ui-dialog-buttonset .ui-button:visible").first().focus()}function updateHash(hash){$("#hash").val(hash).change()}simTutorial.registerTutorial([{msg:"Welcome to SIM Spellstone!  This is a brief tutorial of how to use the Deck Builder."},{ui:"#deckContainer",msg:'The "Deck" section contains your current deck.',actions:[clearHash,showDeck,clearFilters,hideFilters,hideCollection]},{ui:"#hash-container",msg:"If you have a deck hash, you can paste it here to set the current deck.",actions:[clearHash]},{ui:"#deckContainer",msg:"Manually modifying the deck hash will automatically update the deck.",actions:[setHash]},{ui:"#deckContainer",msg:"Left-click on a card to remove it from your deck.",actions:[removeCard]},{ui:"#deckContainer",msg:'Left-click on the commander will remove it and replace it with "Elaria Captain".',actions:[function(){updateHash("QpLQAQwrxIQWkpBglFpB4jrBC4jrBC4jrBC")}]},{ui:"#deckContainer",msg:'Pressing Ctrl-Z will undo the last change made to your deck.  (Ctrl-Y can be used to "redo" a change as well).',actions:[removeCard]},{ui:"#deckContainer",msg:"Holding Ctrl and left-clicking on a card will add a copy of it to your deck.",actions:[setHash]},{ui:"#deckContainer",msg:"You can drag-and-drop units in your deck to rearrange them (currently PC-only).",actions:[closeEditUnit,moveCard]},{ui:"#unitOptions",dialog:!0,msg:"Right-click on a card to bring up an edit dialog.",actions:[moveCard,editCard]},{ui:"#unitOptions",dialog:!0,msg:"Here, you can edit its level, fusion, and runes.",actions:[makeCardEdits]},{ui:"#deck .card:eq(1)",msg:'Changes will made will be shown on the card, but will not be saved until you hit "OK".',actions:[editCard,makeCardEdits]},{ui:"#deckContainer",msg:'Clicking "Cancel" will revert the unit back to its original stats.',actions:[closeEditUnit,moveCard]},{ui:"#link",msg:"This link will load the DeckBuilder with your current deck to allow for easy sharing of decks.  It is automatically updated whenever you update the deck."},{ui:"#resetDeck",msg:'This will remove all cards from your deck and set the commander back to "Elaria Captain".',actions:[clearHash]},{ui:"#sortDeck",msg:"This will sort all cards in your deck based on faction, rarity, and ID (the same way they are sorted in the game)."},{ui:"#saveDeck",msg:"This will allow you to save a deck locally so that you can easily load it later."},{ui:"#loadDeck",msg:"If you have any saved decks, you can use this button to quickly load one of them into the DeckBuilder.",actions:[hideCollection,showDeck]},{ui:"#collection-container",msg:'The "Cards" section contains all of the cards in the game.',actions:[function(){$("#deck-container").accordion("option","active",null)},function(){$("#collection-container").accordion("option","active",0)}]},{ui:"#collection-container",msg:"Left-clicking on a card will add it to your deck.",actions:[closeDetails]},{ui:"#detailedView",dialog:!0,msg:"Right-clicking on a card will display a detailed view of the card.",actions:[function(){$("#collection-container").find(".card").first().contextmenu()},hideFilters]},{ui:"#filter-container",msg:'The "Filters" section allows you to filter the cards in the collection.',actions:[closeDetails,function(){$("#filter-container").accordion("option","active",0)}]},{ui:"#filter-container",msg:"Click on a filter to only show cards that match that filter.",actions:[clearFilters]},{ui:"[name=skill][data-filter=fervor]",msg:'For instance, clicking the "Fervor" filter will only show units that have the skill "Fervor".',actions:[filter]},{ui:"#collection-container",msg:'Now only units with "Fervor" are visible.',actions:[function(){advancedFilters.dialog("close")}]},{ui:"#advancedFilters",dialog:!0,msg:"Right-clicking on a Skill filter will allow you to perform more advanced filtering.",actions:[advancedFilter]},{ui:"#advancedFilters",dialog:!0,msg:"Here you can specify specific Skill values to filter by.  Different skills have different advanced filters available.",actions:[filter,advancedFilter,function(){$("#amount-min").val(4),resetFocus()}]},{ui:"[name=skill][data-filter=fervor]",dialog:!0,msg:'Clicking "OK" will apply the advanced filtering.',actions:[saveAdvancedFilters]},{ui:"#collection-container",msg:'Now only units with at least "Fervor 4" are visible.'},{ui:"#filter-container",msg:'Holding the "Alt" key while clicking on a filter while hide cards that match that filter (not supported by all filters).',actions:[function(){var fervor=$("[name=skill][data-filter=enfeeble]");for(;fervor.hasClass("excluded")||fervor.hasClass("selected");)fervor.click()}]},{ui:"[name=skill][data-filter=enfeeble]",msg:'For instance, holding "Alt" and clicking the "Hex" filter will hide all units that have the skill "Hex".',actions:[filterExclusive]},{ui:"#collection-container",msg:'Now only units with no "Hex" and at least "Fervor 4" are visible.'},{ui:"#name-container",msg:"You can also simply search for a unit by its name.",actions:[function(){$("#nameFilter").val("").trigger(jQuery.Event("keyup"))}]},{ui:"#name-container",msg:'For instance, typing "hide" will filter down to just "Spikehide Dragon" and "Spearhide Dragon".',actions:[setNameFilter]},{ui:"#name-container",msg:'Tip: If the collection is filtered down to a single card, pressing "Enter" while in the Name Filter will add that card to your deck.',actions:[setNameFilter,saveAdvancedFilters,filterExclusive]},{ui:"#clear-filters",msg:'You can click the "Clear All" button to reset all filters.',actions:[clearFilters]},{msg:'To view this tutorial again at any time, you can click the "Help" button.  (Note: this will reset the DeckBuilder.)'}])});
//# sourceMappingURL=deckbuilder.min.js.map